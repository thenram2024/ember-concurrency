{"version":3,"file":"task-factory.js","sources":["../../src/-private/task-factory.js"],"sourcesContent":["import { assert } from '@ember/debug';\nimport { get } from '@ember/object';\nimport { addListener } from '@ember/object/events';\nimport { addObserver } from '@ember/object/observers';\nimport { scheduleOnce } from '@ember/runloop';\nimport {\n  registerModifier,\n  TaskFactory as BaseTaskFactory,\n} from './external/task-factory';\n\nimport { Task, EncapsulatedTask } from './task';\nimport { TaskProperty } from './task-properties';\nimport { TaskGroup } from './task-group';\nimport EmberScheduler from './scheduler/ember-scheduler';\nimport { EMBER_ENVIRONMENT } from './ember-environment';\n\nlet handlerCounter = 0;\n\nfunction registerOnPrototype(\n  addListenerOrObserver,\n  proto,\n  names,\n  taskName,\n  taskMethod,\n  once,\n) {\n  if (names && names.length > 0) {\n    for (let i = 0; i < names.length; ++i) {\n      let name = names[i];\n\n      let handlerName = `__ember_concurrency_handler_${handlerCounter++}`;\n      proto[handlerName] = makeTaskCallback(taskName, taskMethod, once);\n      addListenerOrObserver(proto, name, null, handlerName);\n    }\n  }\n}\n\nfunction makeTaskCallback(taskName, method, once) {\n  return function () {\n    let task = get(this, taskName);\n\n    if (once) {\n      scheduleOnce('actions', task, method, ...arguments);\n    } else {\n      task[method].apply(task, arguments);\n    }\n  };\n}\n\nconst ensureArray = (possibleArr) =>\n  Array.isArray(possibleArr) ? possibleArr : [possibleArr];\n\nregisterModifier('cancelOn', (factory, eventNames) =>\n  factory.addCancelEvents(...ensureArray(eventNames)),\n);\nregisterModifier('observes', (factory, propertyPaths) =>\n  factory.addObserverKeys(...ensureArray(propertyPaths)),\n);\nregisterModifier('on', (factory, eventNames) =>\n  factory.addPerformEvents(...ensureArray(eventNames)),\n);\n\nexport class TaskFactory extends BaseTaskFactory {\n  env = EMBER_ENVIRONMENT;\n\n  createTask(context) {\n    assert(\n      `Cannot create task if a task definition is not provided as generator function or encapsulated task.`,\n      this.taskDefinition,\n    );\n\n    let options = this.getTaskOptions(context);\n\n    if (typeof this.taskDefinition === 'object') {\n      return new EncapsulatedTask(\n        Object.assign({ taskObj: this.taskDefinition }, options),\n      );\n    } else {\n      return new Task(\n        Object.assign(\n          {\n            generatorFactory: (args) =>\n              this.taskDefinition.apply(context, args),\n          },\n          options,\n        ),\n      );\n    }\n  }\n\n  createTaskGroup(context) {\n    assert(\n      `A task definition is not expected for a task group.`,\n      !this.taskDefinition,\n    );\n    let options = this.getTaskOptions(context);\n\n    return new TaskGroup(options);\n  }\n\n  addCancelEvents(...cancelEventNames) {\n    this._cancelEventNames = this._cancelEventNames || [];\n    this._cancelEventNames.push(...cancelEventNames);\n    return this;\n  }\n\n  addObserverKeys(...keys) {\n    this._observes = this._observes || [];\n    this._observes.push(...keys);\n    return this;\n  }\n\n  addPerformEvents(...eventNames) {\n    this._eventNames = this._eventNames || [];\n    this._eventNames.push(...eventNames);\n    return this;\n  }\n\n  getModifier(name) {\n    let modifier = super.getModifier(name);\n    if (!modifier && typeof TaskProperty.prototype[name] === 'function') {\n      // Shim for compatibility with user-defined TaskProperty prototype\n      // extensions. To be removed when replaced with proper public API.\n      modifier = TaskProperty.prototype[name].bind(this);\n    }\n\n    assert(\n      `Task option '${name}' is not recognized as a supported option.`,\n      modifier,\n    );\n\n    return modifier;\n  }\n\n  getScheduler(schedulerPolicy, stateTrackingEnabled) {\n    return new EmberScheduler(schedulerPolicy, stateTrackingEnabled);\n  }\n\n  _setupEmberKVO(proto) {\n    // TODO: Does this make sense in a post-Ember object world?\n\n    registerOnPrototype(\n      addListener,\n      proto,\n      this._eventNames,\n      this.name,\n      'perform',\n      false,\n    );\n    registerOnPrototype(\n      addListener,\n      proto,\n      this._cancelEventNames,\n      this.name,\n      'cancelAll',\n      false,\n    );\n    registerOnPrototype(\n      addObserver,\n      proto,\n      this._observes,\n      this.name,\n      'perform',\n      true,\n    );\n  }\n\n  // Provided for compatibility with ember-concurrency TaskProperty extension\n  // methods\n  get taskFn() {\n    return this.taskDefinition;\n  }\n\n  set taskFn(fn) {\n    this.setTaskDefinition(fn);\n  }\n}\n"],"names":["handlerCounter","registerOnPrototype","addListenerOrObserver","proto","names","taskName","taskMethod","once","length","i","name","handlerName","makeTaskCallback","method","task","get","scheduleOnce","arguments","apply","ensureArray","possibleArr","Array","isArray","registerModifier","factory","eventNames","addCancelEvents","propertyPaths","addObserverKeys","addPerformEvents","TaskFactory","BaseTaskFactory","env","EMBER_ENVIRONMENT","createTask","context","assert","taskDefinition","options","getTaskOptions","EncapsulatedTask","Object","assign","taskObj","Task","generatorFactory","args","createTaskGroup","TaskGroup","cancelEventNames","_cancelEventNames","push","keys","_observes","_eventNames","getModifier","modifier","TaskProperty","prototype","bind","getScheduler","schedulerPolicy","stateTrackingEnabled","EmberScheduler","_setupEmberKVO","addListener","addObserver","taskFn","fn","setTaskDefinition"],"mappings":"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"}