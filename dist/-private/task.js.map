{"version":3,"file":"task.js","sources":["../../src/-private/task.js"],"sourcesContent":["import { setOwner, getOwner } from '@ember/application';\nimport EmberObject, { get, set } from '@ember/object';\nimport { isDestroying, registerDestructor } from '@ember/destroyable';\nimport { Task as BaseTask } from './external/task/task';\nimport { TaskInstance } from './task-instance';\nimport { TaskInstanceExecutor } from './external/task-instance/executor';\nimport { TASKABLE_MIXIN } from './taskable-mixin';\nimport { TRACKED_INITIAL_TASK_STATE } from './tracked-state';\nimport { CANCEL_KIND_LIFESPAN_END } from './external/task-instance/cancelation';\n\n/**\n  The `Task` object lives on a host Ember object (e.g.\n  a Component, Route, or Controller). You call the\n  {@linkcode Task#perform .perform()} method on this object\n  to create run individual {@linkcode TaskInstance}s,\n  and at any point, you can call the {@linkcode Task#cancelAll .cancelAll()}\n  method on this object to cancel all running or enqueued\n  {@linkcode TaskInstance}s.\n\n  <style>\n    .ignore-this--this-is-here-to-hide-constructor,\n    #Task { display: none }\n  </style>\n\n  @class Task\n*/\nexport class Task extends BaseTask {\n  /**\n   * `true` if any current task instances are running.\n   *\n   * @memberof Task\n   * @member {boolean} isRunning\n   * @instance\n   * @readOnly\n   */\n  /**\n   * `true` if any future task instances are queued.\n   *\n   * @memberof Task\n   * @member {boolean} isQueued\n   * @instance\n   * @readOnly\n   */\n  /**\n   * `true` if the task is not in the running or queued state.\n   *\n   * @memberof Task\n   * @member {boolean} isIdle\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The current state of the task: `\"running\"`, `\"queued\"` or `\"idle\"`.\n   *\n   * @memberof Task\n   * @member {string} state\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recently started task instance.\n   *\n   * @memberof Task\n   * @member {TaskInstance} last\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recent task instance that is currently running.\n   *\n   * @memberof Task\n   * @member {TaskInstance} lastRunning\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recently performed task instance.\n   *\n   * @memberof Task\n   * @member {TaskInstance} lastPerformed\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recent task instance that succeeded.\n   *\n   * @memberof Task\n   * @member {TaskInstance} lastSuccessful\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recently completed task instance.\n   *\n   * @memberof Task\n   * @member {TaskInstance} lastComplete\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recent task instance that errored.\n   *\n   * @memberof Task\n   * @member {TaskInstance} lastErrored\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recently canceled task instance.\n   *\n   * @memberof Task\n   * @member {TaskInstance} lastCanceled\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The most recent task instance that is incomplete.\n   *\n   * @memberof Task\n   * @member {TaskInstance} lastIncomplete\n   * @instance\n   * @readOnly\n   */\n  /**\n   * The number of times this task has been performed.\n   *\n   * @memberof Task\n   * @member {number} performCount\n   * @instance\n   * @readOnly\n   */\n\n  constructor(options) {\n    super(options);\n\n    if (!isDestroying(this.context)) {\n      registerDestructor(this.context, () => {\n        this.cancelAll({\n          reason: 'the object it lives on was destroyed or unrendered',\n          cancelRequestKind: CANCEL_KIND_LIFESPAN_END,\n        });\n      });\n    }\n  }\n\n  /**\n   * Flags the task as linked to the parent task's lifetime. Must be called\n   * within another task's perform function. The task will be cancelled if the\n   * parent task is canceled as well.\n   *\n   * ember-concurrency will indicate when this may be needed.\n   *\n   * @method linked\n   * @memberof Task\n   * @instance\n   *\n   */\n\n  /**\n   * Flags the task as not linked to the parent task's lifetime. Must be called\n   * within another task's perform function. The task will NOT be cancelled if the\n   * parent task is canceled.\n   *\n   * This is useful for avoiding the so-called \"self-cancel loop\" for tasks.\n   * ember-concurrency will indicate when this may be needed.\n   *\n   * @method unlinked\n   * @memberof Task\n   * @instance\n   *\n   */\n\n  /**\n   * Creates a new {@linkcode TaskInstance} and attempts to run it right away.\n   * If running this task instance would increase the task's concurrency\n   * to a number greater than the task's maxConcurrency, this task\n   * instance might be immediately canceled (dropped), or enqueued\n   * to run at later time, after the currently running task(s) have finished.\n   *\n   * @method perform\n   * @memberof Task\n   * @param {*} arg* - args to pass to the task function\n   * @instance\n   *\n   * @fires TaskInstance#TASK_NAME:started\n   * @fires TaskInstance#TASK_NAME:succeeded\n   * @fires TaskInstance#TASK_NAME:errored\n   * @fires TaskInstance#TASK_NAME:canceled\n   *\n   */\n\n  /**\n   * Cancels all running or queued `TaskInstance`s for this Task.\n   * If you're trying to cancel a specific TaskInstance (rather\n   * than all of the instances running under this task) call\n   * `.cancel()` on the specific TaskInstance.\n   *\n   * @method cancelAll\n   * @memberof Task\n   * @param options.reason A descriptive reason the task was\n   *   cancelled. Defaults to `\".cancelAll() was explicitly called\n   *   on the Task\"`.\n   * @param options.resetState If true, will clear the task state\n   *   (`last*` and `performCount` properties will be set to initial\n   *   values). Defaults to false.\n   * @instance\n   * @async\n   *\n   */\n\n  get _isAlive() {\n    return !isDestroying(this.context);\n  }\n\n  _taskInstanceFactory(args, performType, linkedObject) {\n    let options = this._taskInstanceOptions(args, performType, linkedObject);\n    let taskInstance = new TaskInstance(options);\n    return taskInstance;\n  }\n\n  _clone() {\n    return new Task({\n      context: this.context,\n      debug: this.debug,\n      env: this.env,\n      generatorFactory: this.generatorFactory,\n      group: this.group,\n      hasEnabledEvents: this.hasEnabledEvents,\n      name: this.name,\n      onStateCallback: this.onStateCallback,\n      scheduler: this.scheduler,\n    });\n  }\n}\n\nif (TRACKED_INITIAL_TASK_STATE) {\n  Object.defineProperties(Task.prototype, TRACKED_INITIAL_TASK_STATE);\n}\n\nObject.assign(Task.prototype, TASKABLE_MIXIN);\n\nconst currentTaskInstanceSymbol = '__ec__encap_current_ti';\nexport class EncapsulatedTask extends Task {\n  constructor(options) {\n    super(options);\n    this.taskObj = options.taskObj;\n    this._encapsulatedTaskStates = new WeakMap();\n    this._encapsulatedTaskInstanceProxies = new WeakMap();\n  }\n\n  _getEncapsulatedTaskClass() {\n    let encapsulatedTaskImplClass = this._encapsulatedTaskImplClass;\n\n    if (!encapsulatedTaskImplClass) {\n      // eslint-disable-next-line ember/no-classic-classes\n      encapsulatedTaskImplClass = EmberObject.extend(this.taskObj, {\n        unknownProperty(key) {\n          let currentInstance = this[currentTaskInstanceSymbol];\n          return currentInstance ? currentInstance[key] : undefined;\n        },\n      });\n    }\n\n    return encapsulatedTaskImplClass;\n  }\n\n  _taskInstanceFactory(args, performType) {\n    let owner = getOwner(this.context);\n    let taskInstanceProxy;\n    let encapsulatedTaskImpl = this._getEncapsulatedTaskClass().create({\n      context: this.context,\n    });\n    setOwner(encapsulatedTaskImpl, owner);\n\n    let generatorFactory = () =>\n      encapsulatedTaskImpl.perform.apply(taskInstanceProxy, args);\n    let taskInstance = new TaskInstance({\n      task: this,\n      args,\n      executor: new TaskInstanceExecutor({\n        generatorFactory,\n        env: this.env,\n        debug: this.debug,\n      }),\n      performType,\n      hasEnabledEvents: this.hasEnabledEvents,\n    });\n    encapsulatedTaskImpl[currentTaskInstanceSymbol] = taskInstance;\n\n    this._encapsulatedTaskStates.set(taskInstance, encapsulatedTaskImpl);\n\n    taskInstanceProxy = this._wrappedEncapsulatedTaskInstance(taskInstance);\n\n    return taskInstanceProxy;\n  }\n\n  _wrappedEncapsulatedTaskInstance(taskInstance) {\n    if (!taskInstance) {\n      return null;\n    }\n\n    let _encapsulatedTaskInstanceProxies =\n      this._encapsulatedTaskInstanceProxies;\n    let proxy = _encapsulatedTaskInstanceProxies.get(taskInstance);\n\n    if (!proxy) {\n      let encapsulatedTaskImpl = this._encapsulatedTaskStates.get(taskInstance);\n\n      proxy = new Proxy(taskInstance, {\n        get(obj, prop) {\n          return prop in obj\n            ? obj[prop]\n            : get(encapsulatedTaskImpl, prop.toString());\n        },\n        set(obj, prop, value) {\n          if (prop in obj) {\n            obj[prop] = value;\n          } else {\n            set(encapsulatedTaskImpl, prop.toString(), value);\n          }\n          return true;\n        },\n        has(obj, prop) {\n          return prop in obj || prop in encapsulatedTaskImpl;\n        },\n        ownKeys(obj) {\n          return Reflect.ownKeys(obj).concat(\n            Reflect.ownKeys(encapsulatedTaskImpl),\n          );\n        },\n        defineProperty(obj, prop, descriptor) {\n          // Ember < 3.16 uses a WeakMap for value storage, keyed to the proxy.\n          // We need to ensure that when we use setProperties to update it, and\n          // it creates Meta, that it uses the proxy to key, otherwise we'll\n          // have two different values stores in Meta, one which won't render.\n          let proxy = _encapsulatedTaskInstanceProxies.get(taskInstance);\n          if (proxy) {\n            if (descriptor.get) {\n              descriptor.get = descriptor.get.bind(proxy);\n            } else if (proxy && descriptor.set) {\n              descriptor.set = descriptor.set.bind(proxy);\n            }\n          }\n\n          return Reflect.defineProperty(encapsulatedTaskImpl, prop, descriptor);\n        },\n        getOwnPropertyDescriptor(obj, prop) {\n          return prop in obj\n            ? Reflect.getOwnPropertyDescriptor(obj, prop)\n            : Reflect.getOwnPropertyDescriptor(encapsulatedTaskImpl, prop);\n        },\n      });\n\n      _encapsulatedTaskInstanceProxies.set(taskInstance, proxy);\n    }\n\n    return proxy;\n  }\n}\n"],"names":["Task","BaseTask","constructor","options","isDestroying","context","registerDestructor","cancelAll","reason","cancelRequestKind","CANCEL_KIND_LIFESPAN_END","_isAlive","_taskInstanceFactory","args","performType","linkedObject","_taskInstanceOptions","taskInstance","TaskInstance","_clone","debug","env","generatorFactory","group","hasEnabledEvents","name","onStateCallback","scheduler","TRACKED_INITIAL_TASK_STATE","Object","defineProperties","prototype","assign","TASKABLE_MIXIN","currentTaskInstanceSymbol","EncapsulatedTask","taskObj","_encapsulatedTaskStates","WeakMap","_encapsulatedTaskInstanceProxies","_getEncapsulatedTaskClass","encapsulatedTaskImplClass","_encapsulatedTaskImplClass","EmberObject","extend","unknownProperty","key","currentInstance","undefined","owner","getOwner","taskInstanceProxy","encapsulatedTaskImpl","create","setOwner","perform","apply","task","executor","TaskInstanceExecutor","set","_wrappedEncapsulatedTaskInstance","proxy","get","Proxy","obj","prop","toString","value","has","ownKeys","Reflect","concat","defineProperty","descriptor","bind","getOwnPropertyDescriptor"],"mappings":"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"}