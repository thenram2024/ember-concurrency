{"version":3,"file":"drop-policy.js","sources":["../../../../../src/-private/external/scheduler/policies/drop-policy.js"],"sourcesContent":["import BoundedPolicy from './bounded-policy';\nimport { makeCancelState, STARTED } from './execution-states';\n\nconst CANCELLED = makeCancelState(\n  `it belongs to a 'drop' Task that was already running`,\n);\n\nclass DropReducer {\n  constructor(remainingSlots) {\n    this.remainingSlots = remainingSlots;\n  }\n\n  step() {\n    if (this.remainingSlots > 0) {\n      this.remainingSlots--;\n      return STARTED;\n    }\n\n    return CANCELLED;\n  }\n}\n\nclass DropPolicy extends BoundedPolicy {\n  makeReducer() {\n    return new DropReducer(this.maxConcurrency);\n  }\n}\n\nexport default DropPolicy;\n"],"names":["CANCELLED","makeCancelState","DropReducer","constructor","remainingSlots","step","STARTED","DropPolicy","BoundedPolicy","makeReducer","maxConcurrency"],"mappings":";;;AAGA,MAAMA,SAAS,GAAGC,eAAe,CAC9B,sDACH,CAAC,CAAA;AAED,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAACC,cAAc,EAAE;IAC1B,IAAI,CAACA,cAAc,GAAGA,cAAc,CAAA;AACtC,GAAA;AAEAC,EAAAA,IAAIA,GAAG;AACL,IAAA,IAAI,IAAI,CAACD,cAAc,GAAG,CAAC,EAAE;MAC3B,IAAI,CAACA,cAAc,EAAE,CAAA;AACrB,MAAA,OAAOE,OAAO,CAAA;AAChB,KAAA;AAEA,IAAA,OAAON,SAAS,CAAA;AAClB,GAAA;AACF,CAAA;AAEA,MAAMO,UAAU,SAASC,aAAa,CAAC;AACrCC,EAAAA,WAAWA,GAAG;AACZ,IAAA,OAAO,IAAIP,WAAW,CAAC,IAAI,CAACQ,cAAc,CAAC,CAAA;AAC7C,GAAA;AACF;;;;"}