{"version":3,"file":"keep-latest-policy.js","sources":["../../../../../src/-private/external/scheduler/policies/keep-latest-policy.js"],"sourcesContent":["import BoundedPolicy from './bounded-policy';\nimport { STARTED, QUEUED, makeCancelState } from './execution-states';\n\nconst CANCELLED = makeCancelState(\n  `it belongs to a 'keepLatest' Task that was already running`,\n);\n\n// Given:\n// - started tasks: [a,b,_]\n// - queued tasks:  [c,d,e,f]\n// KeepLatest will cancel all but the last queued task instance, producing:\n// - started tasks: [a,b,c]\n// - queued tasks: [f]\n\n// TODO: perhaps we should expose another config for the number to keep enqueued.\n//       this would also make sense for enqueued, e.g. perform a max of maxConcurrency\n//       concurrent task instances, but after a number of queued instances has been\n//       reached, they should be cancelled.\n\nclass KeepLatestReducer {\n  constructor(remainingSlots, numToCancel) {\n    this.remainingSlots = remainingSlots;\n    this.numToCancel = numToCancel;\n  }\n\n  step() {\n    if (this.remainingSlots > 0) {\n      this.remainingSlots--;\n      return STARTED;\n    } else {\n      if (this.numToCancel > 0) {\n        this.numToCancel--;\n        return CANCELLED;\n      } else {\n        return QUEUED;\n      }\n    }\n  }\n}\n\nclass KeepLatestPolicy extends BoundedPolicy {\n  makeReducer(numRunning, numQueued) {\n    let maxEnqueued = 1;\n    let totalRunning = numRunning + numQueued;\n    return new KeepLatestReducer(\n      this.maxConcurrency,\n      totalRunning - this.maxConcurrency - maxEnqueued,\n    );\n  }\n}\n\nexport default KeepLatestPolicy;\n"],"names":["CANCELLED","makeCancelState","KeepLatestReducer","constructor","remainingSlots","numToCancel","step","STARTED","QUEUED","KeepLatestPolicy","BoundedPolicy","makeReducer","numRunning","numQueued","maxEnqueued","totalRunning","maxConcurrency"],"mappings":";;;AAGA,MAAMA,SAAS,GAAGC,eAAe,CAC9B,4DACH,CAAC,CAAA;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,iBAAiB,CAAC;AACtBC,EAAAA,WAAWA,CAACC,cAAc,EAAEC,WAAW,EAAE;IACvC,IAAI,CAACD,cAAc,GAAGA,cAAc,CAAA;IACpC,IAAI,CAACC,WAAW,GAAGA,WAAW,CAAA;AAChC,GAAA;AAEAC,EAAAA,IAAIA,GAAG;AACL,IAAA,IAAI,IAAI,CAACF,cAAc,GAAG,CAAC,EAAE;MAC3B,IAAI,CAACA,cAAc,EAAE,CAAA;AACrB,MAAA,OAAOG,OAAO,CAAA;AAChB,KAAC,MAAM;AACL,MAAA,IAAI,IAAI,CAACF,WAAW,GAAG,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE,CAAA;AAClB,QAAA,OAAOL,SAAS,CAAA;AAClB,OAAC,MAAM;AACL,QAAA,OAAOQ,MAAM,CAAA;AACf,OAAA;AACF,KAAA;AACF,GAAA;AACF,CAAA;AAEA,MAAMC,gBAAgB,SAASC,aAAa,CAAC;AAC3CC,EAAAA,WAAWA,CAACC,UAAU,EAAEC,SAAS,EAAE;IACjC,IAAIC,WAAW,GAAG,CAAC,CAAA;AACnB,IAAA,IAAIC,YAAY,GAAGH,UAAU,GAAGC,SAAS,CAAA;AACzC,IAAA,OAAO,IAAIX,iBAAiB,CAC1B,IAAI,CAACc,cAAc,EACnBD,YAAY,GAAG,IAAI,CAACC,cAAc,GAAGF,WACvC,CAAC,CAAA;AACH,GAAA;AACF;;;;"}