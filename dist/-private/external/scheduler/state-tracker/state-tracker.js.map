{"version":3,"file":"state-tracker.js","sources":["../../../../../src/-private/external/scheduler/state-tracker/state-tracker.js"],"sourcesContent":["import RefreshState from './state';\n\nconst CURRENT_REFRESH_TAGS = new Map();\n\nclass StateTracker {\n  constructor() {\n    this.states = new Map();\n  }\n\n  stateFor(taskable) {\n    let guid = taskable.guid;\n    let taskState = this.states.get(guid);\n    if (!taskState) {\n      let currentTag = CURRENT_REFRESH_TAGS.has(guid)\n        ? CURRENT_REFRESH_TAGS.get(guid)\n        : 0;\n      taskState = new RefreshState(taskable, ++currentTag);\n      this.states.set(guid, taskState);\n      CURRENT_REFRESH_TAGS.set(guid, currentTag);\n    }\n    return taskState;\n  }\n\n  // After cancelling/queueing task instances, we have to recompute the derived state\n  // of all the tasks that had/have task instances in this scheduler. We do this by\n  // looping through all the Tasks that we've accumulated state for, and then recursively\n  // applying/adding to the state of any TaskGroups they belong to.\n  computeFinalStates(callback) {\n    this.computeRecursiveState();\n    this.forEachState((state) => callback(state));\n  }\n\n  computeRecursiveState() {\n    this.forEachState((taskState) => {\n      let lastState = taskState;\n      taskState.recurseTaskGroups((taskGroup) => {\n        let state = this.stateFor(taskGroup);\n        state.applyStateFrom(lastState);\n        lastState = state;\n      });\n    });\n  }\n\n  forEachState(callback) {\n    this.states.forEach((state) => callback(state));\n  }\n}\n\nexport default StateTracker;\n"],"names":["CURRENT_REFRESH_TAGS","Map","StateTracker","constructor","states","stateFor","taskable","guid","taskState","get","currentTag","has","RefreshState","set","computeFinalStates","callback","computeRecursiveState","forEachState","state","lastState","recurseTaskGroups","taskGroup","applyStateFrom","forEach"],"mappings":";;AAEA,MAAMA,oBAAoB,GAAG,IAAIC,GAAG,EAAE,CAAA;AAEtC,MAAMC,YAAY,CAAC;AACjBC,EAAAA,WAAWA,GAAG;AACZ,IAAA,IAAI,CAACC,MAAM,GAAG,IAAIH,GAAG,EAAE,CAAA;AACzB,GAAA;EAEAI,QAAQA,CAACC,QAAQ,EAAE;AACjB,IAAA,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAAA;IACxB,IAAIC,SAAS,GAAG,IAAI,CAACJ,MAAM,CAACK,GAAG,CAACF,IAAI,CAAC,CAAA;IACrC,IAAI,CAACC,SAAS,EAAE;AACd,MAAA,IAAIE,UAAU,GAAGV,oBAAoB,CAACW,GAAG,CAACJ,IAAI,CAAC,GAC3CP,oBAAoB,CAACS,GAAG,CAACF,IAAI,CAAC,GAC9B,CAAC,CAAA;MACLC,SAAS,GAAG,IAAII,YAAY,CAACN,QAAQ,EAAE,EAAEI,UAAU,CAAC,CAAA;MACpD,IAAI,CAACN,MAAM,CAACS,GAAG,CAACN,IAAI,EAAEC,SAAS,CAAC,CAAA;AAChCR,MAAAA,oBAAoB,CAACa,GAAG,CAACN,IAAI,EAAEG,UAAU,CAAC,CAAA;AAC5C,KAAA;AACA,IAAA,OAAOF,SAAS,CAAA;AAClB,GAAA;;AAEA;AACA;AACA;AACA;EACAM,kBAAkBA,CAACC,QAAQ,EAAE;IAC3B,IAAI,CAACC,qBAAqB,EAAE,CAAA;IAC5B,IAAI,CAACC,YAAY,CAAEC,KAAK,IAAKH,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAA;AAC/C,GAAA;AAEAF,EAAAA,qBAAqBA,GAAG;AACtB,IAAA,IAAI,CAACC,YAAY,CAAET,SAAS,IAAK;MAC/B,IAAIW,SAAS,GAAGX,SAAS,CAAA;AACzBA,MAAAA,SAAS,CAACY,iBAAiB,CAAEC,SAAS,IAAK;AACzC,QAAA,IAAIH,KAAK,GAAG,IAAI,CAACb,QAAQ,CAACgB,SAAS,CAAC,CAAA;AACpCH,QAAAA,KAAK,CAACI,cAAc,CAACH,SAAS,CAAC,CAAA;AAC/BA,QAAAA,SAAS,GAAGD,KAAK,CAAA;AACnB,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;EAEAD,YAAYA,CAACF,QAAQ,EAAE;IACrB,IAAI,CAACX,MAAM,CAACmB,OAAO,CAAEL,KAAK,IAAKH,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAA;AACjD,GAAA;AACF;;;;"}