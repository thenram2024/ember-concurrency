{"version":3,"file":"task-decorators.js","sources":["../../../src/-private/external/task-decorators.js"],"sourcesContent":["import { TaskFactory } from './task-factory';\n\nfunction taskFromPropertyDescriptor(\n  target,\n  key,\n  descriptor,\n  params = [],\n  factoryClass = TaskFactory,\n) {\n  let { initializer, get, value } = descriptor;\n  let taskFn;\n\n  if (initializer) {\n    taskFn = initializer.call(undefined);\n  } else if (get) {\n    taskFn = get.call(undefined);\n  } else if (value) {\n    taskFn = value;\n  }\n\n  taskFn.displayName = `${key} (task)`;\n\n  let tasks = new WeakMap();\n  let options = params[0] || {};\n  let factory = new factoryClass(key, taskFn, options);\n  factory._setupEmberKVO(target);\n\n  return {\n    get() {\n      let task = tasks.get(this);\n\n      if (!task) {\n        task = factory.createTask(this);\n        tasks.set(this, task);\n      }\n\n      return task;\n    },\n  };\n}\n\nfunction taskGroupPropertyDescriptor(\n  _target,\n  key,\n  _descriptor,\n  params = [],\n  factoryClass = TaskFactory,\n) {\n  let taskGroups = new WeakMap();\n  let options = params[0] || {};\n  let factory = new factoryClass(key, null, options);\n\n  return {\n    get() {\n      let task = taskGroups.get(this);\n\n      if (!task) {\n        task = factory.createTaskGroup(this);\n        taskGroups.set(this, task);\n      }\n\n      return task;\n    },\n  };\n}\n\n// Cribbed from @ember-decorators/utils\nfunction isFieldDescriptor(possibleDesc) {\n  let [target, key, desc] = possibleDesc;\n\n  return (\n    possibleDesc.length === 3 &&\n    typeof target === 'object' &&\n    target !== null &&\n    typeof key === 'string' &&\n    ((typeof desc === 'object' &&\n      desc !== null &&\n      'enumerable' in desc &&\n      'configurable' in desc) ||\n      desc === undefined) // TS compatibility ???\n  );\n}\n\nexport function decoratorWithParams(descriptorFn) {\n  return function (...params) {\n    if (isFieldDescriptor(params)) {\n      return descriptorFn(...params);\n    } else {\n      return (...desc) => descriptorFn(...desc, params);\n    }\n  };\n}\n\nfunction createDecorator(fn, baseOptions = {}, factoryClass = TaskFactory) {\n  return decoratorWithParams((target, key, descriptor, [userOptions] = []) => {\n    let mergedOptions = Object.assign({}, { ...baseOptions, ...userOptions });\n\n    return fn(target, key, descriptor, [mergedOptions], factoryClass);\n  });\n}\n\nexport function createTaskDecorator(\n  baseOptions = {},\n  factoryClass = TaskFactory,\n) {\n  return createDecorator(taskFromPropertyDescriptor, baseOptions, factoryClass);\n}\n\nexport function createTaskGroupDecorator(\n  baseOptions = {},\n  factoryClass = TaskFactory,\n) {\n  return createDecorator(\n    taskGroupPropertyDescriptor,\n    baseOptions,\n    factoryClass,\n  );\n}\n\nexport const lastValue = decoratorWithParams(\n  (_target, _key, descriptor, [taskName] = []) => {\n    const { initializer } = descriptor;\n    delete descriptor.initializer;\n\n    return {\n      get() {\n        let lastInstance = this[taskName].lastSuccessful;\n\n        if (lastInstance) {\n          return lastInstance.value;\n        }\n\n        if (initializer) {\n          return initializer.call(this);\n        }\n\n        return undefined;\n      },\n    };\n  },\n);\n"],"names":["taskFromPropertyDescriptor","target","key","descriptor","params","factoryClass","TaskFactory","initializer","get","value","taskFn","call","undefined","displayName","tasks","WeakMap","options","factory","_setupEmberKVO","task","createTask","set","taskGroupPropertyDescriptor","_target","_descriptor","taskGroups","createTaskGroup","isFieldDescriptor","possibleDesc","desc","length","decoratorWithParams","descriptorFn","createDecorator","fn","baseOptions","userOptions","mergedOptions","Object","assign","createTaskDecorator","createTaskGroupDecorator","lastValue","_key","taskName","lastInstance","lastSuccessful"],"mappings":"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"}