{"version":3,"file":"cancel-all.js","sources":["../../src/helpers/cancel-all.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { assert } from '@ember/debug';\nimport { taskHelperClosure } from '../-private/helpers';\nimport type { Task } from '../index';\n\nconst CANCEL_REASON = \"the 'cancel-all' template helper was invoked\";\n\ntype CancelAllParams = [task: Task<any, any[]>];\n\nexport function cancelHelper(args: CancelAllParams) {\n  let cancelable = args[0];\n  if (!cancelable || typeof cancelable.cancelAll !== 'function') {\n    assert(\n      `The first argument passed to the \\`cancel-all\\` helper should be a Task or TaskGroup (without quotes); you passed ${cancelable}`,\n      false,\n    );\n  }\n\n  return taskHelperClosure('cancel-all', 'cancelAll', [\n    cancelable,\n    { reason: CANCEL_REASON },\n  ]);\n}\n\nexport default helper(cancelHelper);\n"],"names":["CANCEL_REASON","cancelHelper","args","cancelable","cancelAll","assert","taskHelperClosure","reason","helper"],"mappings":";;;;AAKA,MAAMA,aAAa,GAAG,8CAA8C,CAAA;AAI7D,SAASC,YAAYA,CAACC,IAAqB,EAAE;AAClD,EAAA,IAAIC,UAAU,GAAGD,IAAI,CAAC,CAAC,CAAC,CAAA;EACxB,IAAI,CAACC,UAAU,IAAI,OAAOA,UAAU,CAACC,SAAS,KAAK,UAAU,EAAE;AAC7DC,IAAAA,MAAM,CACH,CAAoHF,kHAAAA,EAAAA,UAAW,CAAC,CAAA,EACjI,KACF,CAAC,CAAA;AACH,GAAA;EAEA,OAAOG,iBAAiB,CAAC,YAAY,EAAE,WAAW,EAAE,CAClDH,UAAU,EACV;AAAEI,IAAAA,MAAM,EAAEP,aAAAA;AAAc,GAAC,CAC1B,CAAC,CAAA;AACJ,CAAA;AAEA,gBAAeQ,MAAM,CAACP,YAAY,CAAC;;;;"}